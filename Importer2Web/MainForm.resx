<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AO4AAADuAAAA7gAAAPwAAAD/AAAA/wAAAL8AAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAADLAAAA/wAA
        AP8AAADkAAAAqgAAAKoAAACqAAAAqgAAAKoAAAD8AAAA/wAAAP8AAAAkAAAAAwAAAOwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA5AAAAAAAAAAAAAAAlwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACVAAAAAAAA
        AAAAAAAqAAAA/AAAAP8AAAD/AAAAmQAAAEQAAABEAAAARAAAAEsAAAD7AAAA/wAAAP8AAABrAAAARAAA
        AEQAAABEAAAARAAAAGsAAAD/AAAA/wAAAP8AAABgAAAARAAAAEQAAABEAAAAmgAAAP8AAAD/AAAA/gAA
        ADIAAAAAAAAAAAAAAAAAAACeAAAA/wAAAP8AAADwAAAAIAAAAAAAAAAAAAAAAAAAAMAAAAD/AAAA/wAA
        AIkAAAAAAAAAAAAAAAAAAAAAAAAAiwAAAP8AAAD/AAAA4AAAAAEAAAAAAAAAAAAAAB0AAADuAAAA/wAA
        AP8AAACrAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAD0AAAA/wAAAP8AAADTAAAAFwAAAAAAAAAAAAAAcAAA
        AP8AAAD/AAAA5wAAAAQAAAAAAAAAAAAAAAUAAADoAAAA/wAAAP8AAACOAAAAAAAAAAAAAAAVAAAA0gAA
        AP8AAAD/AAAA+gAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUAAAD+AAAA/wAAAP8AAADXAAAAIwAA
        AAAAAAAXAAAA9gAAAP8AAAD/AAAAUwAAAAAAAAAAAAAAVQAAAP8AAAD/AAAA/wAAADIAAAAAAAAAHQAA
        ANMAAAD/AAAA/wAAAP8AAAB5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAD/AAAA/wAA
        AP8AAAD0AAAAbAAAAAQAAACVAAAA/wAAAP8AAADSAAAAAgAAAAMAAADUAAAA/wAAAP8AAAC/AAAAAAAA
        AFkAAADvAAAA/wAAAP8AAAD/AAAApwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AIsAAAD/AAAA/wAAAP8AAAD/AAAA4gAAAJoAAAD/AAAA/wAAAP8AAABsAAAAbAAAAP8AAAD/AAAA/wAA
        AJgAAADJAAAA/wAAAP8AAAD/AAAA/wAAALoAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGcAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAADyAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACTAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAADBAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADjAAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAAwwAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADpAAAAeAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAA
        AHYAAACzAAAA3gAAAPcAAAD3AAAA5wAAAMIAAACPAAAASQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//j4D/+I+Af+CPgD/Aj4gfgI+ODwCPjw4EgA8MDIAPjByADwgAj48IAI
        +MEACPiBAAj4gg+I+IAPieHwDw/h8A8H4fAPh+HwD4fh8AAAAAAAAAABgAAAAYAAAAHBw8GDwMGDA+BB
        ggfwAAQH8AAAD/wAAB/+AAB//4AA///gA/8=
</value>
  </data>
</root>